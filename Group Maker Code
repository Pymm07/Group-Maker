import random

# These line of code are data for the code to work and also the random.shuffle is used to shift around the names so they are different every time
class_list = ["Leo", "Mason", "Chris", "Nathan", "Jaiden", "Aidan", "Gavin", "Shahood", "Marcos", "Ryan", "Muntag", "Brandon", "Caleb", "Andrew", "Wes", "Abraham", "Tyler", "Thomas", "Connor", "Luke"]

# This is how we determine the input of the user and how to move the names into groups
def generate_groups(class_list, group_size):
    random.shuffle(class_list)  # Shuffle the class list
    groups = [class_list[i:i+group_size] for i in range(0, len(class_list), group_size)]
    return groups

# While loop so you can run the code until the user says stop
while True:
    # Displaying an opening screen with "Welcome to Group Maker" and a display of the class list
    print("Welcome to Group Maker")
    print("======================")
    print(f"Class List: {', '.join(class_list)}")
    print()

    # This is to ask the user if there are any people that can't work together and you can put in 2 names or no
    print("Who cannot work together?(Please put in format name,name)")
    cannotWorkTogether = input().split(",")

    # Check if names in cannotWorkTogether are valid
    invalid_names = [name for name in cannotWorkTogether if name not in class_list]
    if invalid_names:
        print(f"Invalid names: {','.join(invalid_names)}")
        continue

    # Remove the students who cannot work together
    if len(cannotWorkTogether) > 0:
        class_list = [student for student in class_list if student not in cannotWorkTogether]
        random.shuffle(class_list)
   

    # Asking user how many people are wanted in a group
    print("How many people do you want in a group? 2, 3, or 4?")
    userInput = input()

    # To determine user input and display the right groups and number of people in a group
    if userInput == "4":
        groups = generate_groups(class_list, 4)
    elif userInput == "3":
        groups = generate_groups(class_list, 3)
    elif userInput == "2":
        groups = generate_groups(class_list, 2)
    else:
        print("Invalid input! Please enter 2, 3, or 4.")
        continue

    # Display the generated groups
    print("\nGenerated Groups:")
    for group in groups:
        print(group)
    
    # Ask the user if they are done and if they enter 'y' the code terminates and if it's 'n' then the code runs again
    print("\nAre you done making groups? (y/n)")
    user_completed = input().strip().lower()
    
    if user_completed == 'y':
        break  # Exit the loop if user is done
    elif user_completed == 'n':
        continue  # Continue looping if user is not done
    else:
        print("Invalid input! Please enter 'y' or 'n'.")
